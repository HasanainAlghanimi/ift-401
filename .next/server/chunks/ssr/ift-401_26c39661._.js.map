{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/hasan/ift-401/app/signin/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState } from 'react';\r\nimport Link from 'next/link';\r\nimport { useRouter } from 'next/navigation';\r\n\r\ntype FormState = {\r\n  email: string;\r\n  password: string;\r\n  remember: boolean;\r\n};\r\n\r\nexport default function SignInPage() {\r\n  const [form, setForm] = useState<FormState>({\r\n    email: '',\r\n    password: '',\r\n    remember: true,\r\n  });\r\n  const [errors, setErrors] = useState<Partial<FormState> & { general?: string }>({});\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const router = useRouter();\r\n\r\n  const onChange =\r\n    (key: keyof FormState) =>\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      const value = key === 'remember' ? (e.target as HTMLInputElement).checked : e.target.value;\r\n      setForm((f) => ({ ...f, [key]: value }));\r\n      setErrors((err) => ({ ...err, [key]: undefined, general: undefined }));\r\n    };\r\n\r\n  const validate = () => {\r\n    const next: typeof errors = {};\r\n    if (!/^\\S+@\\S+\\.\\S+$/.test(form.email)) next.email = 'Enter a valid email';\r\n    if (!form.password.trim()) next.password = 'Password is required';\r\n    setErrors(next);\r\n    return Object.keys(next).length === 0;\r\n  };\r\n\r\n  const onSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!validate()) return;\r\n\r\n    try {\r\n      setIsLoading(true);\r\n\r\n      // Demo sign-in (localStorage). Replace with your real API later.\r\n      const users: Array<{ email: string }> = JSON.parse(localStorage.getItem('demo_users') || '[]');\r\n      const user = users.find((u) => u.email.toLowerCase() === form.email.toLowerCase());\r\n\r\n      if (!user) {\r\n        setErrors({ general: 'No account found with that email.' });\r\n        return;\r\n      }\r\n\r\n      // NOTE: In this demo we don't verify password since sign-up demo doesn't store it.\r\n      // Set a \"session\"\r\n      localStorage.setItem('demo_session', JSON.stringify({ email: form.email, remember: form.remember }));\r\n\r\n      // Simulate network delay\r\n      await new Promise((r) => setTimeout(r, 400));\r\n\r\n      router.push('/');\r\n    } catch {\r\n      setErrors({ general: 'Something went wrong. Please try again.' });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main className=\"auth\">\r\n      <div className=\"auth__wrap\">\r\n        <div className=\"auth__card\">\r\n          <h1 className=\"auth__title\">Welcome back</h1>\r\n          <p className=\"auth__subtitle\">Sign in to continue trading faster than everyone else.</p>\r\n\r\n          {errors.general && <div className=\"auth__alert\">{errors.general}</div>}\r\n\r\n          <form onSubmit={onSubmit} className=\"auth__form\">\r\n            <label className=\"field\">\r\n              <span className=\"field__label\">Email</span>\r\n              <input\r\n                className={`field__input ${errors.email ? 'is-error' : ''}`}\r\n                type=\"email\"\r\n                value={form.email}\r\n                onChange={onChange('email')}\r\n                placeholder=\"jane.doe@example.com\"\r\n                autoComplete=\"email\"\r\n              />\r\n              {errors.email && <span className=\"field__hint\">{errors.email}</span>}\r\n            </label>\r\n\r\n            <label className=\"field\">\r\n              <span className=\"field__label\">Password</span>\r\n              <input\r\n                className={`field__input ${errors.password ? 'is-error' : ''}`}\r\n                type=\"password\"\r\n                value={form.password}\r\n                onChange={onChange('password')}\r\n                placeholder=\"••••••••\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n              {errors.password && <span className=\"field__hint\">{errors.password}</span>}\r\n            </label>\r\n\r\n            <label className=\"check\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={form.remember}\r\n                onChange={onChange('remember')}\r\n              />\r\n              <span>Remember me</span>\r\n            </label>\r\n\r\n            <button className=\"btn btn--primary auth__submit\" disabled={isLoading}>\r\n              {isLoading ? 'Signing in…' : 'Sign in'}\r\n            </button>\r\n\r\n            <p className=\"auth__foot\">\r\n              New here? <Link href=\"/signup\">Create an account</Link>\r\n            </p>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 263, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/hasan/ift-401/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}