{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/hasan/ift-401/app/trade/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useEffect, useMemo, useState } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\nimport { useDemoSession } from '@/lib/useDemoSession';\r\n\r\ntype Side = 'BUY' | 'SELL';\r\ntype OrderType = 'MARKET' | 'LIMIT';\r\ntype Position = { symbol: string; qty: number; avgPrice: number };\r\ntype Portfolio = { cash: number; positions: Position[] };\r\ntype Order = {\r\n  id: string;\r\n  time: string;\r\n  symbol: string;\r\n  side: Side;\r\n  type: OrderType;\r\n  qty: number;\r\n  price?: number;\r\n  fillPrice: number;\r\n};\r\n\r\nconst STARTING_CASH = 100_000;\r\n\r\n// ——— Quick symbol universe for the dropdown\r\nconst SYMBOLS = [\r\n  'AAPL','MSFT','NVDA','TSLA','AMD','SHOP','GOOG','AMZN','META','NFLX',\r\n  'JPM','BAC','TSM','AVGO','ADBE','CRM','INTC','CSCO','ORCL','QCOM',\r\n  'KO','PEP','WMT','COST','NKE','DIS','MRNA','PFE','BABA','T','VZ'\r\n];\r\n\r\n// ——— persist helpers\r\nfunction readJSON<T>(key: string, fallback: T): T {\r\n  try { return JSON.parse(localStorage.getItem(key) || 'null') ?? fallback; }\r\n  catch { return fallback; }\r\n}\r\nfunction writeJSON(key: string, value: unknown) {\r\n  localStorage.setItem(key, JSON.stringify(value));\r\n}\r\nfunction ensurePortfolio(): Portfolio {\r\n  const p = readJSON<Portfolio>('demo_portfolio', { cash: STARTING_CASH, positions: [] });\r\n  if (typeof p.cash !== 'number' || !Array.isArray(p.positions)) return { cash: STARTING_CASH, positions: [] };\r\n  return p;\r\n}\r\nfunction getQuote(symbol: string): number {\r\n  const s = symbol || 'AAPL';\r\n  const seed = [...s].reduce((a, c) => a + c.charCodeAt(0), 0);\r\n  const base = 50 + (seed % 400);\r\n  const jitter = (Date.now() / 1000) % 10;\r\n  return Math.round((base + jitter) * 100) / 100;\r\n}\r\nconst fmt = (n: number) => `$${n.toLocaleString(undefined, { maximumFractionDigits: 2 })}`;\r\n\r\nexport default function TradePage() {\r\n  const router = useRouter();\r\n  const { isLoggedIn } = useDemoSession();\r\n\r\n  // —— auth-check (declare hooks first, no early returns)\r\n  const [mounted, setMounted] = useState(false);\r\n  const [hasSession, setHasSession] = useState<boolean | null>(null);\r\n  useEffect(() => {\r\n    setMounted(true);\r\n    try { setHasSession(!!localStorage.getItem('demo_session')); }\r\n    catch { setHasSession(false); }\r\n  }, []);\r\n  const authed = isLoggedIn || !!hasSession;\r\n\r\n  // —— ticket state\r\n  const [symbol, setSymbol] = useState('AAPL');\r\n  const [qty, setQty] = useState<number>(1);\r\n  const [side, setSide] = useState<Side>('BUY');\r\n  const [type, setType] = useState<OrderType>('MARKET');\r\n  const [limitPrice, setLimitPrice] = useState<number>(0);\r\n  const [message, setMessage] = useState<string>('');\r\n\r\n  // —— portfolio / orders\r\n  const [portfolio, setPortfolio] = useState<Portfolio>({ cash: STARTING_CASH, positions: [] });\r\n  const [orders, setOrders] = useState<Order[]>([]);\r\n\r\n  useEffect(() => {\r\n    if (!mounted) return;\r\n    setPortfolio(ensurePortfolio());\r\n    setOrders(readJSON<Order[]>('demo_orders', []));\r\n  }, [mounted]);\r\n\r\n  // redirect only once we know\r\n  useEffect(() => {\r\n    if (!mounted) return;\r\n    if (!authed) router.replace('/signin');\r\n  }, [mounted, authed, router]);\r\n\r\n  const posMap = useMemo(() => {\r\n    const map = new Map<string, Position>();\r\n    portfolio.positions.forEach(p => map.set(p.symbol, p));\r\n    return map;\r\n  }, [portfolio.positions]);\r\n\r\n  const quote = useMemo(() => getQuote(symbol.toUpperCase()), [symbol]);\r\n\r\n  function upsertPosition(s: string, fillPrice: number, qtyDelta: number) {\r\n    const next = { ...portfolio };\r\n    const existing = next.positions.find(p => p.symbol === s);\r\n    if (!existing) {\r\n      if (qtyDelta > 0) next.positions.push({ symbol: s, qty: qtyDelta, avgPrice: fillPrice });\r\n    } else {\r\n      const newQty = existing.qty + qtyDelta;\r\n      if (newQty <= 0) {\r\n        next.positions = next.positions.filter(p => p.symbol !== s);\r\n      } else if (qtyDelta > 0) {\r\n        existing.avgPrice = (existing.avgPrice * existing.qty + fillPrice * qtyDelta) / newQty;\r\n        existing.qty = newQty;\r\n      } else {\r\n        existing.qty = newQty;\r\n      }\r\n    }\r\n    setPortfolio(next);\r\n    writeJSON('demo_portfolio', next);\r\n  }\r\n\r\n  function placeOrder() {\r\n    const s = symbol.trim().toUpperCase();\r\n    if (!/^[A-Z]{1,6}$/.test(s)) { setMessage('Enter a valid stock symbol (A–Z, up to 6).'); return; }\r\n    if (!Number.isFinite(qty) || qty <= 0) { setMessage('Quantity must be a positive number.'); return; }\r\n\r\n    const current = ensurePortfolio();\r\n    const px = type === 'MARKET' ? quote : Number(limitPrice);\r\n    if (!Number.isFinite(px) || px <= 0) { setMessage('Enter a valid price.'); return; }\r\n\r\n    if (type === 'LIMIT') {\r\n      if (side === 'BUY'  && px < quote) { setMessage(`Limit not reached. Current ~ ${fmt(quote)}.`); return; }\r\n      if (side === 'SELL' && px > quote) { setMessage(`Limit not reached. Current ~ ${fmt(quote)}.`); return; }\r\n    }\r\n\r\n    const cost = Number((px * qty).toFixed(2));\r\n    if (side === 'BUY' && cost > current.cash) { setMessage('Insufficient cash for this order.'); return; }\r\n    if (side === 'SELL') {\r\n      const have = posMap.get(s)?.qty ?? 0;\r\n      if (qty > have) { setMessage(`You only have ${have} ${s} to sell.`); return; }\r\n    }\r\n\r\n    const fillPrice = px;\r\n\r\n    const next: Portfolio = JSON.parse(JSON.stringify(current));\r\n    if (side === 'BUY')  next.cash = Number((next.cash - cost).toFixed(2));\r\n    if (side === 'SELL') next.cash = Number((next.cash + cost).toFixed(2));\r\n    setPortfolio(next);\r\n    writeJSON('demo_portfolio', next);\r\n\r\n    upsertPosition(s, fillPrice, side === 'BUY' ? qty : -qty);\r\n\r\n    const order: Order = {\r\n      id: crypto.randomUUID(),\r\n      time: new Date().toISOString(),\r\n      symbol: s, side, type, qty,\r\n      price: type === 'LIMIT' ? px : undefined,\r\n      fillPrice\r\n    };\r\n    const nextOrders = [order, ...orders].slice(0, 100);\r\n    setOrders(nextOrders);\r\n    writeJSON('demo_orders', nextOrders);\r\n\r\n    setMessage(`${side} ${qty} ${s} @ ${fmt(fillPrice)} filled.`);\r\n  }\r\n\r\n  // derived UI helpers\r\n  const est = (type === 'MARKET' ? quote : (limitPrice || 0)) * qty;\r\n  const canSubmit =\r\n    /^[A-Z]{1,6}$/.test(symbol.trim().toUpperCase()) &&\r\n    Number.isFinite(qty) &&\r\n    qty > 0 &&\r\n    (type === 'MARKET' || (Number.isFinite(limitPrice) && limitPrice > 0));\r\n\r\n  // ——— render gates (after hooks)\r\n  if (!mounted) return null;\r\n  if (!authed) return null;\r\n\r\n  return (\r\n    <main className=\"trade container\" style={{ paddingTop: 24, paddingBottom: 24 }}>\r\n      <div className=\"pageheader\">\r\n        <div>\r\n          <h1 className=\"stocks__title\">Trade</h1>\r\n          <p className=\"stocks__sub\">Place market or limit orders in this demo environment.</p>\r\n        </div>\r\n        <div className=\"header-actions\">\r\n          <span className=\"badge badge--ok\">Demo only</span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"grid\">\r\n        {/* ——— Ticket ——— */}\r\n        <section className=\"card\">\r\n          {/* Side pills */}\r\n          <div className=\"pillgroup\" role=\"tablist\" aria-label=\"Order side\">\r\n            <button\r\n              className={`pillbtn ${side === 'BUY' ? 'is-active' : ''}`}\r\n              onClick={() => { setSide('BUY'); setMessage(''); }}\r\n              type=\"button\"\r\n            >\r\n              Buy\r\n            </button>\r\n            <button\r\n              className={`pillbtn ${side === 'SELL' ? 'is-active' : ''}`}\r\n              onClick={() => { setSide('SELL'); setMessage(''); }}\r\n              type=\"button\"\r\n            >\r\n              Sell\r\n            </button>\r\n          </div>\r\n\r\n          <form className=\"auth__form\" onSubmit={(e) => { e.preventDefault(); placeOrder(); }}>\r\n            <div className=\"fieldrow\">\r\n              {/* Symbol with dropdown */}\r\n              <label className=\"field\" style={{ position: 'relative' }}>\r\n                <span className=\"field__label\">Symbol</span>\r\n                <input\r\n                  className=\"field__input\"\r\n                  list=\"symbols\"\r\n                  value={symbol}\r\n                  onChange={(e) => { setSymbol(e.target.value.toUpperCase()); setMessage(''); }}\r\n                  placeholder=\"AAPL\"\r\n                  autoCapitalize=\"characters\"\r\n                />\r\n                <datalist id=\"symbols\">\r\n                  {SYMBOLS.map(sym => <option key={sym} value={sym} />)}\r\n                </datalist>\r\n              </label>\r\n\r\n              <label className=\"field\">\r\n                <span className=\"field__label\">Quantity</span>\r\n                <input\r\n                  className=\"field__input\"\r\n                  type=\"number\"\r\n                  min={1}\r\n                  step={1}\r\n                  value={qty}\r\n                  onChange={(e) => { setQty(Math.max(1, Number(e.target.value))); setMessage(''); }}\r\n                  placeholder=\"1\"\r\n                />\r\n              </label>\r\n            </div>\r\n\r\n            {/* Type pills + price */}\r\n            <div className=\"fieldrow\">\r\n              <label className=\"field\">\r\n                <span className=\"field__label\">Order type</span>\r\n                <div className=\"pillgroup\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className={`pillbtn ${type === 'MARKET' ? 'is-active' : ''}`}\r\n                    onClick={() => { setType('MARKET'); setMessage(''); }}\r\n                  >\r\n                    Market\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className={`pillbtn ${type === 'LIMIT' ? 'is-active' : ''}`}\r\n                    onClick={() => { setType('LIMIT'); setMessage(''); }}\r\n                  >\r\n                    Limit\r\n                  </button>\r\n                </div>\r\n              </label>\r\n\r\n              <label className=\"field\">\r\n                <span className=\"field__label\">Price {type === 'MARKET' ? '(quote)' : '(limit)'}</span>\r\n                <input\r\n                  className=\"field__input\"\r\n                  type=\"number\"\r\n                  step=\"0.01\"\r\n                  value={type === 'MARKET' ? quote : limitPrice}\r\n                  onChange={(e) => setLimitPrice(Number(e.target.value))}\r\n                  placeholder=\"0.00\"\r\n                  disabled={type === 'MARKET'}\r\n                />\r\n              </label>\r\n            </div>\r\n\r\n            {/* Summary strip */}\r\n            <div className=\"actions-row\">\r\n              <div className=\"badge\">Est. {side === 'BUY' ? 'Cost' : 'Proceeds'}: <strong>{fmt(est || 0)}</strong></div>\r\n              <div className=\"badge\">Quote: {fmt(quote)}</div>\r\n            </div>\r\n\r\n            {message && (\r\n              <div\r\n                className={`trade__alert ${\r\n                  /filled\\.$/i.test(message) ? 'is-success' : 'is-error'\r\n                }`}\r\n                style={{ marginTop: 6 }}\r\n              >\r\n                {message}\r\n              </div>\r\n            )}\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn--primary\"\r\n              style={{ width: '100%' }}\r\n              disabled={!canSubmit}\r\n              title={!canSubmit ? 'Enter a valid symbol, quantity, and price' : undefined}\r\n            >\r\n              {side === 'BUY' ? 'Buy' : 'Sell'} {qty} {symbol.toUpperCase()}\r\n            </button>\r\n          </form>\r\n        </section>\r\n\r\n        {/* ——— Account ——— */}\r\n        <aside className=\"card\">\r\n          <h3 style={{ marginTop: 0, marginBottom: 8 }}>Account</h3>\r\n          <div className=\"sd__grid\" style={{ marginBottom: 12 }}>\r\n            <div className=\"sd__cell\"><div className=\"sd__label\">Cash</div><div className=\"sd__value\">{fmt(portfolio.cash)}</div></div>\r\n            <div className=\"sd__cell\"><div className=\"sd__label\">Positions</div><div className=\"sd__value\">{portfolio.positions.length}</div></div>\r\n            <div className=\"sd__cell\"><div className=\"sd__label\">Buying Power</div><div className=\"sd__value\">{fmt(portfolio.cash)}</div></div>\r\n          </div>\r\n\r\n          <h4 style={{ margin: '8px 0' }}>Positions</h4>\r\n          {portfolio.positions.length === 0 ? (\r\n            <div className=\"muted\">No positions yet.</div>\r\n          ) : (\r\n            <ul className=\"table__body\" style={{ marginTop: 6 }}>\r\n              {portfolio.positions.map(p => {\r\n                const mark = getQuote(p.symbol);\r\n                const pnl = (mark - p.avgPrice) * p.qty;\r\n                const cls = pnl >= 0 ? 'num is-up' : 'num is-down';\r\n                return (\r\n                  <li key={p.symbol} className=\"row\" style={{ gridTemplateColumns: '1fr 1fr 1fr 1fr' }}>\r\n                    <div className=\"name\"><strong>{p.symbol}</strong><span className=\"symbol\">x{p.qty}</span></div>\r\n                    <div className=\"num\">{fmt(p.avgPrice)}</div>\r\n                    <div className=\"num\">{fmt(mark)}</div>\r\n                    <div className={cls}>{pnl >= 0 ? '+' : ''}{pnl.toFixed(2)}</div>\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          )}\r\n        </aside>\r\n      </div>\r\n\r\n      {/* ——— Orders ——— */}\r\n      <section className=\"card spaced\">\r\n        <h3 style={{ marginTop: 0, marginBottom: 8 }}>Recent orders</h3>\r\n        {orders.length === 0 ? (\r\n          <div className=\"muted\">No orders yet.</div>\r\n        ) : (\r\n          <ul className=\"table__body\">\r\n            {orders.map(o => (\r\n              <li key={o.id} className=\"row\" style={{ gridTemplateColumns: '1.2fr 1fr 1fr 1fr 1fr' }}>\r\n                <div className=\"name\">\r\n                  <strong>{o.symbol}</strong>\r\n                  <span className=\"symbol\">{new Date(o.time).toLocaleString()}</span>\r\n                </div>\r\n                <div className=\"num\">{o.side}</div>\r\n                <div className=\"num\">{o.type}{o.price ? ` (${fmt(o.price)})` : ''}</div>\r\n                <div className=\"num\">{o.qty}</div>\r\n                <div className=\"num\">{fmt(o.fillPrice)}</div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}